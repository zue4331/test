#include<iostream>
#include<string>
#include<time.h>

using namespace std;

#define NUM 1000
int j = 2;
int randNum[NUM];
				 
class Poker
{
private:
	int poker[53];     
	int pokerValue[53]; 
	string pokerName[53]; 

	int money;     
	int bet;     

	int Ppoker[5];    
	int Bpoker[5];   
	int Pcardnum;   
	int Bcardnum;   
public:
	Poker();           
	void shuPoker();  
	string Pget();  
	string Bget();  
	int Ppoint();      
	int Bpoint();       
	void Paddcard();           
	void Baddcard();      
	void Ante();           
	void newGame();            
	void noadd();        

};

int main()
{
	int choose = 1;
	Poker poker;
	cout << "              歡迎玩二十一點遊戲               " << endl << endl;
	poker.Ante();
	poker.shuPoker();                   

	while (choose == 1 || choose == 2 || choose == 3 || choose == 4)
	{
		cout << "1.要牌 2.不要牌 3.重新開始 4.退出  >>請輸入數字選擇操作:";
		cin >> choose;
		if		(choose == 1)      poker.Paddcard();
		else if (choose == 2)      poker.noadd();
		else if (choose == 3)      poker.newGame();
		else if (choose == 4)      exit(0);
	}

	return 0;
}

void Poker::Ante()
{
	cout << "玩家擁有" << money << "元,請輸入賭注:";
	do
	{
		cin >> bet;
		if (bet > money)
			cout << "超過現有賭注金額，請重新輸入:";
	} while (bet > money);

}

Poker::Poker()
{

	poker[0] = 0;
	for (int i = 1; i <= 13; i++)    
	{                         
		poker[i] = i;           
		poker[i + 13] = i;        
		poker[i + 26] = i;        
		poker[i + 39] = i;       
	}

	pokerValue[0] = 0;
	for (int i = 1; i <= 52; i++)
	{
		if (poker[i] <= 10)  pokerValue[i] = poker[i];
		else              pokerValue[i] = 10;
	}


	pokerName[0] = "";
	for (int i = 0; i < 4; i++)
	{
		pokerName[1 + 13 * i] = "A";
		pokerName[2 + 13 * i] = "2";
		pokerName[3 + 13 * i] = "3";
		pokerName[4 + 13 * i] = "4";
		pokerName[5 + 13 * i] = "5";
		pokerName[6 + 13 * i] = "6";
		pokerName[7 + 13 * i] = "7";
		pokerName[8 + 13 * i] = "8";
		pokerName[9 + 13 * i] = "9";
		pokerName[10 + 13 * i] = "10";
		pokerName[11 + 13 * i] = "J";
		pokerName[12 + 13 * i] = "Q";
		pokerName[13 + 13 * i] = "K";
	}

	money = 1000;  
	bet = 0;

	for (int i = 0; i < 5; i++)
	{
		Ppoker[i] = 0;    
		Bpoker[i] = 0;    
	}


	Pcardnum = 0;
	Bcardnum = 0;

	srand((int)time(0));
	for (int i = 0; i < NUM; i++)
	{
		randNum[i] = rand() * 51 / 32767 + 1;
	}

}
void Poker::noadd()
{
	if (Bpoint() >= 17)
	{
		if (Bpoint() > Ppoint())
		{
			cout << "莊家的牌為" << Bget() << endl;
			cout << "莊家獲勝，玩家失去" << bet << "元" << endl;
			money = money - bet;
			if (money <= 0)
			{
				cout << "賭注耗盡" << endl;
				cout << "遊戲結束" << endl;
				exit(0);
			}
			Ante();
			shuPoker();
		}
		else if (Ppoint() == Bpoint())
		{
			cout << "莊家的牌為" << Bget() << endl;
			cout << "本次遊戲平手" << endl;
			Ante();
			shuPoker();
		}
		else
		{
			cout << "莊家的牌為" << Bget() << endl;
			cout << "玩家獲勝,玩家贏得" << bet << "元" << endl;
			money = money + bet;
			Ante();
			shuPoker();
		}
	}
	else
	{
		Baddcard();
	}
}


void Poker::newGame()
{
	Ante();
	shuPoker();
	cout << "你得到的牌為:" << Pget() << endl;
}
